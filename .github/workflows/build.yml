# Put your personal access token in a repository secret named PAT for cross-repository access
name: Build
on:
  workflow_dispatch:
  push:
    branches:
    - build-test
    # - master
    # - dev

env:
  PUBLIC_NAME: Saucy
  SOLUTION_NAME: Saucy
  INTERNAL_NAME: Saucy
  RELEASE_DIR: Saucy\bin\x64\Release\Saucy
  PERSONAL_PLUGIN_REPO: PartyLich/MyDalamudPlugins
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DALAMUD_HOME: $env:AppData\XIVLauncher\addon\Hooks\dev

jobs:
  build:
    # if: "contains(toJSON(github.event.commits.*.message), 'build:')"
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip ${{ env.DALAMUD_HOME }}
    - name: Build
      run: |
        dotnet restore -r win ${{ env.SOLUTION_NAME }}.sln
        dotnet build --configuration Release
    #- name: Test
    #  run: |
    #    dotnet test --no-restore --verbosity normal
    - uses: actions/upload-artifact@v2
      with:
        name: binary_zip
        path: ${{ env.RELEASE_DIR }}
        if-no-files-found: error

  # deploy:
  #   needs: build
  #   if: "contains(toJSON(github.event.commits.*.message), 'build:')"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       repository: ${{ env.PERSONAL_PLUGIN_REPO }}
  #       token: ${{ secrets.PAT }}
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: PluginRepoZip
  #       path: plugins/${{ env.INTERNAL_NAME }}
  #   - uses: EndBug/add-and-commit@v7
  #     with:
  #       add: --all
  #       author_name: GitHub Action
  #       author_email: github-actions[bot]@users.noreply.github.com
  #       message: Update ${{ env.INTERNAL_NAME }}

  # see https://github.com/marketplace/actions/create-release
  create_release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download binary artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: binary_zip

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}

      - name: Display structure of downloaded files
        if: ${{ always() }}
        run: ls -R

      - name: Current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "latest.zip"
          body: "Plugin update"
          commit: build-test
          # a tagged semver commit would be better, of course
          #tag: latest-${{ steps.date.outputs.date }}
          tag: latest-${{ github.event.repository.updated_at}}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
