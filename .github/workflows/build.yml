name: Build

# Put your personal access token in a repository secret named PAT for cross-repository access

on:
  workflow_dispatch:
  push:
    branches:
    - dev
    - build-test
    # - master

env:
  PUBLIC_NAME: Saucy
  SOLUTION_NAME: Saucy
  INTERNAL_NAME: Saucy
  RELEASE_DIR: Saucy\bin\Release\Saucy
  PERSONAL_PLUGIN_REPO: PartyLich/MyDalamudPlugins
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    # if: "contains(toJSON(github.event.commits.*.message), 'build:')"
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"
    - name: Build
      run: |
        dotnet restore -r win ${{ env.SOLUTION_NAME }}.sln
        dotnet build --configuration Release
    - name: Test
      run: |
        dotnet test --no-restore --verbosity normal
    - uses: actions/upload-artifact@v2
      with:
        name: binary_zip
        path: ${{ env.RELEASE_DIR }}
        if-no-files-found: error

  # deploy:
  #   needs: build
  #   if: "contains(toJSON(github.event.commits.*.message), 'build:')"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       repository: ${{ env.PERSONAL_PLUGIN_REPO }}
  #       token: ${{ secrets.PAT }}
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: PluginRepoZip
  #       path: plugins/${{ env.INTERNAL_NAME }}
  #   - uses: EndBug/add-and-commit@v7
  #     with:
  #       add: --all
  #       author_name: GitHub Action
  #       author_email: github-actions[bot]@users.noreply.github.com
  #       message: Update ${{ env.INTERNAL_NAME }}

  # see https://github.com/marketplace/actions/create-release
  create_release:
    needs:
      - binary_build
      - changelog
    runs-on: ubuntu-latest
   # strategy:
   #   matrix:
   #     os:
   #       - macOS-latest
   #       - ubuntu-latest
   #       - windows-latest
   #     include:
   #       - os: ubuntu-latest
   #        target: x86_64-unknown-linux-gnu
   #       - os: macOS-latest
   #        target: x86_64-apple-darwin
   #       - os: windows-latest
   #         target: x86_64-pc-windows-msvc
    steps:
      - name: Download binary artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: binary_zip
    #      path: binary_zip

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}

     # - name: Compress binary artifact again
     #   run: |
     #     if [ "${{ matrix.os }}" = "windows-latest" ]; then
     #       # -9 compress better, -y store symlinks, -r recurse dirs, -v verbose
     #       zip -9yrv "bandcamp_downloader-${{ matrix.target }}.zip" "bandcamp_downloader-${{ matrix.target }}";
     #     else
     #       # create, gzip, verbose, file
     #       tar -czvf "bandcamp_downloader-${{ matrix.target }}.tar.gz" "bandcamp_downloader-${{ matrix.target }}";
     #     fi

      - name: Display structure of downloaded files
        if: ${{ always() }}
        run: ls -R

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "binary_zip"
          body: "Plugin update"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true